#include <glog/logging.h>
int main(int argc, char* argv[]) {

    // Initializing glog (Google Logging library)
    google::InitGoogleLogging(argv[0]);
    
    // Forwarding glog output to the console (stderr)
    FLAGS_logtostderr = 1;

    // Printing messages
    LOG(INFO) << "Example 05 from Chapter 03:";
    LOG(INFO) << "Running binary compiled from C++ code.";
    LOG(INFO) << "Project files were generated by CMake.";
    LOG(INFO) << "Project was built by Ninja.";
    LOG(INFO) << "Project is linked with Google Logging library (glog) retrieved by Conan.";

#ifdef __x86_64__
    LOG(INFO) << "Current architecture is x86_64.";
#elif defined(__i386__)
    LOG(INFO) << "Current architecture is x86 (i386).";
#elif defined(__aarch64__)
    LOG(INFO) << "Current architecture is ARM64 (aarch64).";
#elif defined(__arm__)
    LOG(INFO) << "Current architecture is ARM.";
#elif defined(__mips__)
    LOG(INFO) << "Current architecture is MIPS.";
#else
    LOG(INFO) << "Some unknown architecture.";
#endif

    // Shutting down the Google Logging library
    google::ShutdownGoogleLogging();

    return 0;
}
